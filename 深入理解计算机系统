一
1.1
hello.c始于源程序，以字节序列储存在文件中。像这样只由ASCII字符构成的文件称为文本文件，所有其他的文件都称为二进制文件。
系统中的所有信息都是由一连串的bit表示的。
1.2
hello.c源程序会被转化成（UNIX上是由编译器驱动程序完成的）一系列低级机器语言指令。然后这些指令按照一种称为可执行目标程序的格式打包，并且以二进制磁盘文件的形式存放起来。
目标程序——可执行目标文件
编译系统——预处理器cpp → hello.i(修改了的源程序；文本)，编译器cll → hello.s（汇编程序；文本），
          汇编器as → hello.o（可重定位目标程序；二进制文件），链接器ld（在这里链接printf.o和hello.o）→ hello（可执行目标程序；二进制文件）。
P.S.:cpp--#，读取stdio.h并插入到程序文本中，得到另一个C程序
    :汇编语言为不同高级语言提供了通用的输出语言
1.3
1.4
shell——一个命令行解释器
  1.4.1
  典型系统的硬件组织
  总线——贯穿整个系统的一组电子管道，传送定长的字节块
  I/O设备——系统与外部的联系通道，每个I/O设备都通过一个控制器和适配器（用于传递信息）与I/O总线相连。
  主存——一个临时存储设备。由一组DRAM（动态随机存取存储器）芯片组成。
  CPU——处理器，核心是一个大小为一个字的存储设备（或寄存器register），称为程序计数器（PC），PC指向主存中某条机器语言指令（即含有该条指令的地址），它不断更新去指向下一条指令
P.S.:更新后的指令并不一定和刚刚执行的指令相邻
    :ALU——算数/逻辑单元
    :指令集架构——CPU中指令执行的模型，描述每条机器代码指令的效果
    :微处理器架构——CPU具体是如何实现的
  1.4.2



